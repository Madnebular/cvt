MACRO ( MACRO_PLUGIN PLUGIN_NAME ADDITIONAL_INCLUDES ADDITIONAL_LIBS )

FIND_PACKAGE( Eigen3 REQUIRED )
FIND_PACKAGE( OpenCL REQUIRED )
FIND_PACKAGE( OpenGL REQUIRED )
IF( APPLE )
	SET( OPENGL_gl_LIBRARY "/usr/X11/lib/libGL.dylib" )
	SET( OPENGL_glu_LIBRARY "/usr/X11/lib/libGLU.dylib" )
	SET( OPENGL_INCLUDE_DIR "/usr/X11/include/GL" )
	SET( X11_X11_LIB "/usr/X11/lib/libX11.dylib")
	SET( OPENGL_LIBRARIES ${OPENGL_gl_LIBRARY} ${OPENGL_glu_LIBRARY} )
	INCLUDE_DIRECTORIES( /usr/X11/include )
	LINK_DIRECTORIES(/usr/X11/lib)
ENDIF( APPLE )

include( GLCLTOHEADER )

MESSAGE(STATUS "Configuring: ${PLUGIN_NAME}") 

# get all headers and cpp files in the folder:
FILE(GLOB SRCS_${PLUGIN_NAME} "*.cpp" "*.h" "*.hpp" "*.mm")
FILE(GLOB CLSRCS_${PLUGIN_NAME} "*.cl")

FOREACH (CLSOURCE ${CLSRCS_${PLUGIN_NAME}})
	GET_FILENAME_COMPONENT( CLFILE ${CLSOURCE} NAME )
	CLTOHEADER(${CLFILE})
	GET_FILENAME_COMPONENT( CLFILE ${CLSOURCE} NAME_WE )
	SET(CLHEADER_${PLUGIN_NAME} ${CLHEADER_${PLUGIN_NAME}} "${CMAKE_CURRENT_SOURCE_DIR}/${CLFILE}.h" )
ENDFOREACH(CLSOURCE)

SET(LIBRARY_OUTPUT_PATH "${CMAKE_BINARY_DIR}/bin/plugins")

ADD_LIBRARY(${PLUGIN_NAME} SHARED ${SRCS_${PLUGIN_NAME}} ${CLHEADER_${PLUGIN_NAME}} )
SET_TARGET_PROPERTIES(${PLUGIN_NAME} PROPERTIES PREFIX "")

INCLUDE_DIRECTORIES( 
	"${CMAKE_SOURCE_DIR}"
	"${CMAKE_SOURCE_DIR}/cvt"
	"${CMAKE_CURRENT_SOURCE_DIR}"
	"${EIGEN3_INCLUDE_DIR}"
	"${OPENCL_INCLUDE_DIR}"
	"${OPENCL_INCLUDE_DIR}"	
	${ADDITIONAL_INCLUDES}
)

TARGET_LINK_LIBRARIES(
	${PLUGIN_NAME}
	cvt
	${ADDITIONAL_LIBS}
)

add_dependencies( ${PLUGIN_NAME} cvt ${CMAKE_CURRENT_SOURCE_DIR} )
SET_TARGET_PROPERTIES("${PLUGIN_NAME}" PROPERTIES DEBUG_POSTFIX "")

IF( ${CMAKE_GENERATOR} MATCHES "Xcode" )
	SET_TARGET_PROPERTIES("${PLUGIN_NAME}" PROPERTIES PREFIX "../")
ENDIF()

INSTALL(TARGETS ${PLUGIN_NAME}
	LIBRARY DESTINATION lib
	COMPONENT Plugins
)

ENDMACRO (MACRO_PLUGIN)
